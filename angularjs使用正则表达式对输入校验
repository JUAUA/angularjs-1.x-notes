
使用正则表达式校验来过滤掉前端用户使用时传入的不合理参数

js:
为了方便使用，定义了一个全局的正则表达式
第一步:定义
var Pattern={
		 letter:/^\w+$/,
		 word:/^[a-zA-Z]+$/,
		 number:/^\d+$/,
		 word_num:/^[a-zA-Z0-9]+$/,
		 email:/^[A-Za-z0-9]+(([.]\w+)|([-\w]))*@([A-Za-z0-9]+[-.])+[A-Za-z0-9]{2,5}$/,
		 qq:/^(\d{3,}|[A-Za-z0-9]+([-_.][A-Za-z0-9]+)*@([A-Za-z0-9]+[-.])+[A-Za-z0-9]{2,5})$/,
		 mobile:/^1[3|4|5|8|7]\d{9}$/,
		 authcodeNum:/^\d{6}$/,
		 authcodeChar:/^\w{4}$/,
		 accounts:/^((\w+)|([A-Za-z0-9]+([-_.][A-Za-zd]+)*@([A-Za-z0-9]+[-.])+[A-Za-z0-9]{2,5}))$/,
		 name:/^[_a-zA-Z0-9\u4e00-\u9fa5]+$/,
		 text:/^[,.，。！!:：；'、"“”？?\sa-zA-Z0-9\u4e00-\u9fa5]+$/,
		 zhWords:/^[\u4e00-\u9fa5]+[\|\u4e00-\u9fa5]*[\u4e00-\u9fa5]+/,
		 zhenWords:/^[a-zA-Z\u4e00-\u9fa5]+[\|a-zA-Z\u4e00-\u9fa5]*[a-zA-Z\u4e00-\u9fa5]+$/,
		 tag:/(&lt|[<\u003c])\s*\/{0,1}\w+([\u003e>]|&gt)/,
		 url:/https{0,1}\s*:/,
		 month:/^0?[1-9]|1[0-2]$/
	};
第二部:存储，将正则表达式变量pattern存于angularjs自定义服务中
lingjuPlatform.factory("$pattern",function(){//在该lingjuPlatform 域下面的控制域，都可以通过注入$pattern来使用到正则表达式
	return Pattern;
});

第三步:输入校验
if(!$scope.pattern.text.test(data.response)){//想校验哪个类型的输入，就调用哪个类型的正则来调用test方法
  $scope.alerts.push({type: 'faild-used', msg:"回复内容格式错误，请不要输入特殊字符。"});//如果校验结果返回false,则说明传入的参数是不符合规定的，则可以使用之前说过的错误提示方法来提示用户输入有误
  return;
}
